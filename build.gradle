plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.0'
    id 'io.spring.dependency-management' version '1.0.4.RELEASE' apply false
}

ext {
    // Project constants
    github_org = 'Discord4J'
    project_name = 'stores'
    artifact_group = 'com.discord4j'
    project_version = '3.0.0-SNAPSHOT'
    project_description = 'Java interface for the Discord API'
    project_jdk = '1.8'

    // Dependencies
    discord4j_store_version = '34526cf'
    reactor_test_version = '3.1.7.RELEASE'
    autoservice_version = '1.0-rc4'
    commons_codec_version = '1.10'
    junit_version = '4.12'
    logback_version = '1.3.0-alpha4'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    group = artifact_group
    version = project_version
    description = project_description

    sourceCompatibility = project_jdk
    targetCompatibility = project_jdk

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        compile "com.discord4j.discord4j:discord4j-store:$discord4j_store_version"
        compile "com.google.auto.service:auto-service:$autoservice_version"

        testCompile "junit:junit:$junit_version"
        testCompile "ch.qos.logback:logback-classic:$logback_version"
        testCompile "io.projectreactor:reactor-test:$reactor_test_version"
    }

    task downloadDependencies() {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }

    javadoc.options.encoding = 'UTF-8'

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
        publications = ['maven']
        dryRun = false
        publish = true
        pkg {
            userOrg = 'austinv11'
            repo = 'maven'
            name = 'Stores'
            websiteUrl = 'https://discord4j.com'
            issueTrackerUrl = 'https://github.com/Discord4J/Stores/issues'
            vcsUrl = 'https://github.com/Discord4J/Stores.git'
            licenses = ['LGPL-3.0']
            labels = ['discord', 'discord4j', 'd4j', 'reactor', 'nebula']
            publicDownloadNumbers = true
            attributes = [:]
            version {
                name = project.version
                vcsTag = project.version
                gpg {
                    sign = true
                }
                if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                    def sonatypeUsername = project.property('sonatypeUsername')
                    def sonatypePassword = project.property('sonatypePassword')
                    mavenCentralSync {
                        user = sonatypeUsername
                        password = sonatypePassword
                    }
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    archivesBaseName = 'stores-' + project.name

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifactId archivesBaseName
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
        }
    }
}

bintrayUpload.dependsOn build

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionUrl = 'https://services.gradle.org/distributions/gradle-4.7-all.zip'
}
